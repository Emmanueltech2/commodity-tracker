{
  "forms": {},
  "schedules": [],
  "contact_summary": "var ContactSummary = {}; !function(e,t){if('object'==typeof exports&&'object'==typeof module)module.exports=t();else if('function'==typeof define&&define.amd)define([],t);else{var n=t();for(var r in n)('object'==typeof exports?exports:e)[r]=n[r]}}(ContactSummary,(function(){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){'undefined'!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:'Module'}),Object.defineProperty(e,'__esModule',{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&'object'==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,'default',{enumerable:!0,value:e}),2&t&&'string'!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,'a',t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p='',n(n.s=0)}([function(e,t,n){var r=n(1),o=n(2);e.exports=o(r,contact,reports)},function(e,t){e.exports={fields:[],cards:[],context:{}}},function(e,t){function n(e){return e?Array.isArray(e)?e:[e]:[]}function r(e,t){switch(typeof e){case'undefined':return!0;case'function':return e(t);default:return e}}function o(e,t,n){if(r(e.appliesIf,n)){var o='function'==typeof e.fields?e.fields(n):e.fields.filter((function(e){return r(e.appliesIf,n)})).map((function(e){var t={};return i(e,t,'label'),i(e,t,'value'),i(e,t,'translate'),i(e,t,'filter'),i(e,t,'width'),i(e,t,'icon'),e.context&&(t.context={},i(e.context,t.context,'count'),i(e.context,t.context,'total')),t}));return e.modifyContext&&e.modifyContext(t,n),{label:e.label,fields:o}}function i(e,t,r){switch(typeof e[r]){case'undefined':return;case'function':t[r]=e[r](n);break;default:t[r]=e[r]}}}e.exports=function(e,t,r){var i=e.fields||[],f=e.context||{},u=e.cards||[],c=t&&('contact'===t.type?t.contact_type:t.type),l={cards:[],fields:i.filter((function(e){var t=n(e.appliesToType),r=t.filter((function(e){return e&&'!'===e.charAt(0)}));if((0===t.length||t.includes(c)||r.length>0&&!r.includes('!'+c))&&(!e.appliesIf||e.appliesIf()))return delete e.appliesToType,delete e.appliesIf,!0}))};return u.forEach((function(e){var t,i,u,a,p=n(e.appliesToType);if(p.includes('report')&&p.length>1)throw new Error('You cannot set appliesToType to an array which includes the type \\'report\\' and another type.');if(p.includes('report'))for(t=0;t<r.length;++t)i=r[t],!(a=i)||a.errors&&a.errors.length||(u=o(e,f,i))&&l.cards.push(u);else{if(!p.includes(c)&&p.length>0)return;(u=o(e,f))&&l.cards.push(u)}})),l.context=f,l}}])})); return ContactSummary;",
  "tasks": {
    "rules": "define Target { _id: null, contact: null, deleted: null, type: null, pass: null, date: null, groupBy: null }\ndefine Contact { contact: null, reports: null, tasks: null }\ndefine Task { _id: null, deleted: null, doc: null, contact: null, icon: null, date: null, readyStart: null, readyEnd: null, title: null, fields: null, resolved: null, priority: null, priorityLabel: null, reports: null, actions: null }\nrule GenerateEvents {\n  when { c: Contact } then { !function(t){var e={};function n(o){if(e[o])return e[o].exports;var r=e[o]={i:o,l:!1,exports:{}};return t[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=t,n.c=e,n.d=function(t,e,o){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},n.r=function(t){'undefined'!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:'Module'}),Object.defineProperty(t,'__esModule',{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&'object'==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,'default',{enumerable:!0,value:t}),2&e&&'string'!=typeof t)for(var r in t)n.d(o,r,function(e){return t[e]}.bind(null,r));return o},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,'a',e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p='',n(n.s=1)}([function(t,e){t.exports=function(t){var e={};!function t(e,n){var o=Object.keys(e);for(var r in o){var s=o[r];switch(typeof e[s]){case'object':t(e[s],n);break;case'function':e[s]=e[s].bind(n)}}}(t,e),e.definition=function t(e){var n=Object.assign({},e),o=Object.keys(n);for(var r in o){var s=o[r];if(Array.isArray(n[s])){n[s]=n[s].slice(0);for(var a=0;a<n[s].length;++a)'object'==typeof n[s][a]&&(n[s][a]=t(n[s][a]))}else'object'==typeof n[s]&&(n[s]=t(n[s]))}return n}(t)}},function(t,e,n){var o=n(2),r=n(4),s=n(5);n(7)(r,c,Utils,Target,emit),s(o,c,Utils,Task,emit),emit('_complete',{_id:!0})},function(t,e,n){const o=n(3),{isAlive:r,isFormArraySubmittedInWindow:s,getDateISOLocal:a,addDays:i,isCholeraTaskMuted:c,getField:p}=o;t.exports=[{name:'assessment-after-registration',title:'First Assessment',icon:'icon-form-general.svg',appliesTo:'contacts',appliesToType:['patient'],appliesIf:t=>t.parent&&'chp_area'===t.parent.contact_type&&!t.contact.date_of_death&&!t.contact.muted,actions:[{form:'assessment'}],events:[{start:7,days:7,end:0}]},{name:'suspicion_followup.from_report',icon:'icon-follow-up',title:'task.patient.suspicion_followup.title',appliesTo:'contacts',appliesToType:['patient.suspicion_followup'],appliesIf:function(t,e){return'yes'===p(e,'t_danger_signs_referral_follow_up')&&r(t)},resolvedIf:function(t,e,n,o){if(c(t))return!0;const r=Math.max(i(o,-n.start).getTime(),e.reported_date+1),a=i(o,n.end+1).getTime();return s(t.reports,['patient.suspicion_followup'],r,a)},actions:[{type:'report',form:'patient.suspicion_followup',modifyContent:function(t,e,n){t.delivery_uuid=p(n,'inputs.delivery_uuid')}}],events:[{id:'patient-danger-sign-follow-up',start:3,end:7,dueDate:function(t,e,n){return a(p(n,'t_danger_signs_referral_follow_up_date'))}}]}]},function(t,e){const n=['patient.suspicion_followup'];function o(t,e){return e.split('.').reduce((t,e)=>{if(void 0!==t)return t[e]},t)}function r(t){return n.includes(t.form)}function s(t,e){let n;return t.forEach((function(t){e.includes(t.form)&&!t.deleted&&(!n||t.reported_date>n.reported_date)&&(n=t)})),n}function a(t){if(!t)return new Date;const e=t.split(/\\D/),n=new Date(e[0],e[1]-1,e[2]);return function(t){return t instanceof Date&&!isNaN(t)}(n)?n:new Date}function i(t){const e=new Date(t);return e.setHours(0),e.setMinutes(0),e.setSeconds(0),e.setMilliseconds(0),e}function c(t){if('string'==typeof t){if(''===t)return null;t=a(t)}return i(t).getTime()}const p=function(t,e){let n;return t.forEach((function(t){e.includes(t.form)&&(!n||t.reported_date>n.reported_date)&&(n=t)})),n};t.exports={addDays:function(t,e){const n=i(new Date(t));return n.setDate(n.getDate()+e),n},isAlive:function(t){return t&&t.contact&&!t.contact.date_of_death},getTimeForMidnight:i,isFormArraySubmittedInWindow:function(t,e,n,o,r){let s=!1,a=0;return t.forEach((function(t){e.includes(t.form)&&t.reported_date>=n&&t.reported_date<=o&&(s=!0,r&&a++)})),r?a>=r:s},isFormArraySubmittedInWindowExcludingThisReport:function(t,e,n,o,r,s){let a=!1,i=0;return t.forEach((function(t){e.includes(t.form)&&t.reported_date>=n&&t.reported_date<=o&&t._id!==r._id&&(a=!0,s&&i++)})),s?i>=s:a},getDateMS:c,getDateISOLocal:a,isSuspicionForm:r,getMostRecentReport:s,getNewestSuspicionTimestamp:function(t){if(!t.contact)return 0;const e=s(t.reports,'patient.suspicion_followup');return e?e.reported_date:0},getReportsSubmittedInWindow:function(t,e,n,o,r){const s=[];return t.forEach((function(t){e.includes(t.form)&&t.reported_date>=n&&t.reported_date<=o&&(r&&!r(t)||s.push(t))})),s},countReportsSubmittedInWindow:function(t,e,n,o,r){let s=0;return t.forEach((function(t){e.includes(t.form)&&t.reported_date>=n&&t.reported_date<=o&&(r&&!r(t)||s++)})),s},getLMPDateFromSuspicionFollowUp:function(t){return r(t)&&c(o(t,'lmp_date_8601'))},getNewestReport:p,isCholeraTaskMuted:function(t){const e=p(t.reports,n);return e&&r(e)&&'clear_all'===o(e,'suspicion_ended.clear_option')},getField:o}},function(t,e){const n=t=>t.contact&&'clinic'===t.contact.type?t.contact._id:t.contact.parent&&t.contact.parent._id,o=t=>t.contact&&'person'===t.contact.type&&t.contact.parent&&t.contact.parent.parent&&t.contact.parent.parent.parent;t.exports=[{id:'assessments-all-time',type:'count',icon:'icon-healthcare-assessment',goal:-1,translation_key:'targets.assessments.title',subtitle_translation_key:'targets.all_time.subtitle',appliesTo:'reports',appliesToType:['assessment'],date:'now'},{id:'assessments-this-month',type:'count',icon:'icon-healthcare-assessment',goal:2,translation_key:'targets.assessments.title',subtitle_translation_key:'targets.this_month.subtitle',appliesTo:'reports',appliesToType:['assessment'],date:'reported'},{id:'total-contacts-with-cough-this-month',type:'count',icon:'icon-cough',goal:-1,translation_key:'targets.assessments.total.cough.title',subtitle_translation_key:'targets.this_month.subtitle',appliesTo:'reports',appliesToType:['assessment'],appliesIf:function(t,e){return'yes'===Utils.getField(e,'group_assessment.cough')},idType:'contact',date:'reported'},{id:'percentage-contacts-with-cough-this-month',type:'percent',icon:'icon-cough',goal:-1,translation_key:'targets.assessments.percentage.cough.title',subtitle_translation_key:'targets.this_month.subtitle',percentage_count_translation_key:'targets.assessments.percentage.with.cough',appliesTo:'reports',appliesToType:['assessment'],appliesIf:function(t){return o(t)},passesIf:function(t,e){return'yes'===Utils.getField(e,'group_assessment.cough')},idType:'contact',date:'reported'},{id:'households-with-assessments-this-month',type:'count',icon:'icon-household',goal:2,translation_key:'targets.households.with.assessments.title',subtitle_translation_key:'targets.this_month.subtitle',appliesTo:'reports',appliesToType:['assessment'],date:'reported',emitCustom:(t,e,o)=>{const r=n(o);t(Object.assign({},e,{_id:r,pass:!0}))}},{id:'households-with-gt2-assessments-this-month',type:'percent',icon:'icon-household',goal:60,translation_key:'targets.households.with.gt2.assessments.title',subtitle_translation_key:'targets.all_time.subtitle',appliesTo:'contacts',appliesToType:['person','clinic'],date:'now',emitCustom:(t,e,r)=>{const s=n(r);o(r)&&r.reports.some(t=>'assessment'===t.form)&&t(Object.assign({},e,{_id:s,pass:!0})),r.contact&&'clinic'===r.contact.type&&t(Object.assign({},e,{_id:s,pass:!1}))},groupBy:t=>n(t),passesIfGroupCount:{gte:2}}]},function(t,e,n){var o=n(0),r=n(6);function s(t,e,n,o,r,s){var a;if(t.appliesToType){var i;if('contacts'===t.appliesTo){if(!r.contact)return;i='contact'===r.contact.type?r.contact.contact_type:r.contact.type}else{if(!s)return;i=s.form}if(-1===t.appliesToType.indexOf(i))return}if('scheduled_tasks'===t.appliesTo||!t.appliesIf||t.appliesIf(r,s))if('scheduled_tasks'===t.appliesTo){if(s&&t.appliesIf){if(!s.scheduled_tasks)return;for(a=0;a<s.scheduled_tasks.length;a++)t.appliesIf(r,s,a)&&p(a)}}else p();function c(t,e,n){var o;return(o='function'==typeof t.contactLabel?t.contactLabel(e,n):t.contactLabel)?{name:o}:e.contact}function p(a){var i,p,l,d,f=null;for(i=0;i<t.events.length;i++){if((p=t.events[i]).dueDate)f=p.dueDate(p,r,s,a);else if(s)f=void 0!==a?new Date(e.addDate(new Date(s.scheduled_tasks[a].due),p.days)):new Date(e.addDate(new Date(s.reported_date),p.days));else if(p.dueDate)f=p.dueDate(p,r);else{var _=r.contact&&r.contact.reported_date?new Date(r.contact.reported_date):new Date;f=new Date(e.addDate(_,p.days))}e.isTimely(f,p)&&(d={_id:(s?s._id:r.contact&&r.contact._id)+'~'+(p.id||i)+'~'+t.name,deleted:!(!(r.contact&&r.contact.deleted||s)||!s.deleted),doc:r,contact:c(t,r,s),icon:t.icon,date:f,readyStart:p.start||0,readyEnd:p.end||0,title:t.title,resolved:t.resolvedIf(r,s,p,f,a),actions:u(t.actions,p)},void 0!==a&&(d._id+='-'+a),'function'==typeof(l=t.priority)&&(l=l(r,s)),l&&(d.priority=l.level,d.priorityLabel=l.label),o('task',new n(d)))}}function u(e,n){return t.actions.map((function(t){return function(t,e){var n={source:'task',source_id:s?s._id:r.contact&&r.contact._id,contact:r.contact};t.modifyContent&&t.modifyContent(n,r,s,e);return{type:t.type||'report',form:t.form,label:t.label||'Follow up',content:n}}(t,n)}))}}t.exports=function(t,e,n,a,i){if(t)for(var c,p,u=0;u<t.length;++u)switch('function'!=typeof(c=Object.assign({},t[u],r)).resolvedIf&&(c.resolvedIf=function(t,e,o,r){return c.defaultResolvedIf(t,e,o,r,n)}),o(c),c.appliesTo){case'reports':case'scheduled_tasks':for(var l=0;l<e.reports.length;++l)p=e.reports[l],s(c,n,a,i,e,p);break;case'contacts':e.contact&&s(c,n,a,i,e);break;default:throw new Error('Unrecognised task.appliesTo: '+c.appliesTo)}}},function(t,e){t.exports={defaultResolvedIf:function(t,e,n,o,r){var s,a;r||(r=Utils);var i=function(t){var e;if(!t||!t.actions)return;return(e=t.actions.find((function(t){return!t.type||'report'===t.type})))&&e.form}(this.definition);if(!i)throw new Error('Could not find the default resolving form!');return s=0,s=e?Math.max(r.addDate(o,-n.start).getTime(),e.reported_date+1):r.addDate(o,-n.start).getTime(),a=r.addDate(o,n.end+1).getTime(),r.isFormSubmittedInWindow(t.reports,i,s,a)}}},function(t,e,n){var o=n(0);function r(t,e,n,o,r,s){var a=!!s;if(r.contact){var i='contact'===r.contact.type?r.contact.contact_type:r.contact.type,c=a?s.form:i;if(!(t.appliesToType&&t.appliesToType.indexOf(c)<0)&&(!t.appliesIf||t.appliesIf(r,s)))for(var p=a?s:r.contact,u=function(t,e,n){var o;return o='function'==typeof t.idType?t.idType(e,n):'report'===t.idType?n&&n._id:e.contact&&e.contact._id,Array.isArray(o)||(o=[o]),o}(t,r,s),l=!t.passesIf||!!t.passesIf(r,s),d=function(t,e,n,o){if('function'==typeof t.date)return t.date(n,o)||e.now().getTime();if(void 0===t.date||null===t.date||'now'===t.date)return e.now().getTime();if('reported'===t.date)return o?o.reported_date:n.contact.reported_date;throw new Error('Unrecognised value for target.date: '+t.date)}(t,n,r,s),f=t.groupBy&&t.groupBy(r,s),_=0;_<u.length;++_){var m=new e({_id:u[_]+'~'+t.id,contact:r.contact,deleted:!!p.deleted,type:t.id,pass:l,groupBy:f,date:d});t.emitCustom?t.emitCustom(y,m,r,s):y(m)}}function y(t){o('target',t)}}t.exports=function(t,e,n,s,a){for(var i=0;i<t.length;++i){var c=t[i];switch(o(c),c.appliesTo){case'contacts':r(c,s,n,a,e);break;case'reports':for(var p=0;p<e.reports.length;++p){r(c,s,n,a,e,e.reports[p])}break;default:throw new Error('Unrecognised target.appliesTo: '+c.appliesTo)}}}}]); }\n}",
    "targets": {
      "enabled": true,
      "items": [
        {
          "id": "assessments-all-time",
          "type": "count",
          "goal": -1,
          "translation_key": "targets.assessments.title",
          "icon": "icon-healthcare-assessment",
          "subtitle_translation_key": "targets.all_time.subtitle"
        },
        {
          "id": "assessments-this-month",
          "type": "count",
          "goal": 2,
          "translation_key": "targets.assessments.title",
          "icon": "icon-healthcare-assessment",
          "subtitle_translation_key": "targets.this_month.subtitle"
        },
        {
          "id": "total-contacts-with-cough-this-month",
          "type": "count",
          "goal": -1,
          "translation_key": "targets.assessments.total.cough.title",
          "icon": "icon-cough",
          "subtitle_translation_key": "targets.this_month.subtitle"
        },
        {
          "id": "percentage-contacts-with-cough-this-month",
          "type": "percent",
          "goal": -1,
          "translation_key": "targets.assessments.percentage.cough.title",
          "icon": "icon-cough",
          "subtitle_translation_key": "targets.this_month.subtitle"
        },
        {
          "id": "households-with-assessments-this-month",
          "type": "count",
          "goal": 2,
          "translation_key": "targets.households.with.assessments.title",
          "icon": "icon-household",
          "subtitle_translation_key": "targets.this_month.subtitle"
        },
        {
          "id": "households-with-gt2-assessments-this-month",
          "type": "percent",
          "goal": 60,
          "translation_key": "targets.households.with.gt2.assessments.title",
          "passesIfGroupCount": {
            "gte": 2
          },
          "icon": "icon-household",
          "subtitle_translation_key": "targets.all_time.subtitle"
        }
      ]
    }
  ,
  "locale": "en",
  "locale_outgoing": "en",
  "date_format": "D MMM, YYYY",
  "reported_date_format": "DD-MMM-YYYY HH:mm:ss",
  "roles": {
    "data_entry": {
      "name": "usertype.data-entry"
    },
    "DSO":{
        "name":"Disease-surveillance-officer"
    },
    "facility_Dsteam":{
      "name":"Facility disease surveillance team"
  },


    "analytics": {
      "name": "usertype.analytics"
    },
    "gateway": {
      "name": "usertype.gateway"
    },
    "program_officer": {
      "name": "usertype.program-officer"
    },
    "crfo": {
      "name": "usertype.crfo"
    },
    "chp_supervisor": {
      "name": "usertype.chp-supervisor",
      "offline": true
    },
    "chp": {
      "name": "usertype.chp",
      "offline": true
    }
  },
  "permissions": {
    "can_access_gateway_api": ["gateway"],
    "can_bulk_delete_reports": ["program_officer", "chp_supervisor", "chp"],
    "can_configure": ["program_officer", "crfo"],
    "can_create_people": ["program_officer", "chp_supervisor", "chp"],
    "can_create_places": ["program_officer", "chp_supervisor", "chp"],
    "can_create_records": [
      "data_entry",
      "gateway",
      "program_officer",
      "chp_supervisor",
      "chp"
    ],
    "can_create_users": ["program_officer"],
    "can_delete_contacts": ["program_officer", "chp_supervisor", "chp"],
    "can_delete_messages": ["program_officer", "chp_supervisor", "chp"],
    "can_delete_reports": ["program_officer", "chp_supervisor", "chp"],
    "can_delete_users": ["program_officer"],
    "can_edit": ["gateway", "program_officer", "chp_supervisor", "chp"],
    "can_edit_profile": ["program_officer", "chp_supervisor", "chp"],
    "can_edit_verification": ["program_officer", "chp_supervisor", "chp"],
    "can_export_all": ["program_officer", "crfo"],
    "can_export_contacts": ["program_officer", "chp_supervisor", "chp"],
    "can_export_feedback": ["program_officer"],
    "can_export_messages": [
      "analytics",
      "program_officer",
      "disease_surveillance_officer",
      "chp_supervisor",
      "chp"
    ],
    "can_log_out_on_android": [],
    "can_update_places": ["program_officer", "chp_supervisor", "chp"],
    "can_update_reports": ["program_officer", "chp_supervisor", "chp"],
    "can_update_users": ["program_officer"],
    "can_export_dhis": ["national_admin", "crfo"],
    "can_verify_reports": ["program_officer", "chw_supervisor", "chw"],
    "can_view_analytics": [
      "analytics",
      "program_officer",
      "chp_supervisor",
      "chp"
    ],
    "can_view_analytics_tab": ["program_officer", "chp_supervisor", "chp"],
    "can_view_call_action": ["program_officer", "chp_supervisor", "chp"],
    "can_view_contacts": ["program_officer", "chp_supervisor", "chp"],
    "can_view_contacts_tab": ["program_officer", "chp_supervisor", "chp"],
    "can_view_last_visited_date": [],
    "can_view_uhc_stats": [],
    "can_view_message_action": ["program_officer", "chp_supervisor", "chp"],
    "can_view_messages": ["program_officer", "chp_supervisor", "chp"],
    "can_view_messages_tab": ["program_officer", "chp_supervisor", "chp"],
    "can_view_outgoing_messages": ["program_officer"],
    "can_view_reports": ["program_officer", "chp_supervisor", "chp"],
    "can_view_reports_tab": ["program_officer", "chp_supervisor", "chp"],
    "can_view_tasks": ["chp_supervisor", "chp"],
    "can_view_tasks_tab": ["chp_supervisor", "chp"],
    "can_view_tasks_group": ["chp"],
    "can_view_unallocated_data_records": [
      "gateway",
      "program_officer",
      "chp_supervisor",
      "chp"
    ],
    "can_view_users": ["program_officer"],
    "can_write_wealth_quintiles": [],
    "can_aggregate_targets": ["chw_supervisor"],
    "can_upgrade": ["program_officer"],
    "can_view_old_filter_and_search": [],
    "can_view_old_action_bar": []
  },
  "contact_types": [
    {
      "id": "area_health_facility",
      "icon": "area-health-facility",
      "name_key": "contact.type.area_health_facility",
      "group_key": "contact.type.area_health_facility.plural",
      "create_key": "contact.type.area_health_facility.new",
      "edit_key": "contact.type.area_health_facility.edit",
      "create_form": "form:contact:area_health_facility:create",
      "edit_form": "form:contact:area_health_facility:edit"
    },
    {
      "id": "area_health_facility_nurse",
      "icon": "area-health-facility-nurse",
      "name_key": "contact.type.area_health_facility_nurse",
      "group_key": "contact.type.area_health_facility_nurse.plural",
      "create_key": "contact.type.area_health_facility_nurse.new",
      "edit_key": "contact.type.area_health_facility_nurse.edit",
      "parents": ["area_health_facility"],
      "create_form": "form:contact:area_health_facility_nurse:create",
      "edit_form": "form:contact:area_health_facility_nurse:edit",
      "person": true
    },
    {
      "id": "area_supervisor_region",
      "icon": "area-supervisor-region",
      "name_key": "contact.type.area_supervisor_region",
      "group_key": "contact.type.area_supervisor_region.plural",
      "create_key": "contact.type.area_supervisor_region.new",
      "edit_key": "contact.type.area_supervisor_region.edit",
      "parents": ["area_health_facility"],
      "create_form": "form:contact:area_supervisor_region:create",
      "edit_form": "form:contact:area_supervisor_region:edit"
    },
    {
      "id": "area_community_health_supervisor",
      "icon": "area-community-health-supervisor",
      "name_key": "contact.type.area_community_health_supervisor",
      "group_key": "contact.type.area_community_health_supervisor.plural",
      "create_key": "contact.type.area_community_health_supervisor.new",
      "edit_key": "contact.type.area_community_health_supervisor.edit",
      "parents": ["area_supervisor_region"],
      "create_form": "form:contact:area_community_health_supervisor:create",
      "edit_form": "form:contact:area_community_health_supervisor:edit",
      "person": true
    },
    {
      "id": "community_health_area",
      "icon": "community-health-area",
      "name_key": "contact.type.community_health_area",
      "group_key": "contact.type.community_health_area.plural",
      "create_key": "contact.type.community_health_area.new",
      "edit_key": "contact.type.community_health_area.edit",
      "create_form": "form:contact:community_health_area:create",
      "parents": ["area_supervisor_region"],
      "edit_form": "form:contact:community_health_area:edit"
    },
    {
      "id": "community_health_volunteer",
      "icon": "community-health-volunteer",
      "name_key": "contact.type.community_health_volunteer",
      "group_key": "contact.type.community_health_volunteer.plural",
      "create_key": "contact.type.community_health_volunteer.new",
      "edit_key": "contact.type.community_health_volunteer.edit",
      "parents": ["community_health_area"],
      "create_form": "form:contact:community_health_volunteer:create",
      "edit_form": "form:contact:community_health_volunteer:edit",
      "person": true
    },
    {
      "id": "household",
      "icon": "household",
      "name_key": "contact.type.household",
      "group_key": "contact.type.household.plural",
      "create_key": "contact.type.household.new",
      "edit_key": "contact.type.household.edit",
      "parents": ["community_health_area"],
      "create_form": "form:contact:household:create",
      "edit_form": "form:contact:household:edit"
    },
    {
      "id": "household_member",
      "icon": "household-member",
      "name_key": "contact.type.household_member",
      "group_key": "contact.type.household_member.plural",
      "create_key": "contact.type.household_member.new",
      "edit_key": "contact.type.household_member.edit",
      "parents": ["household"],
      "create_form": "form:contact:household_member:create",
      "edit_form": "form:contact:household_member:edit",
      "person": true
    }
  ]
  
  
  
  }
}
