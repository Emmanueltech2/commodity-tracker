{
  "locales": [
    {
      "code": "en",
      "name": "English"
    },
    {
      "code": "sw",
      "name": "Kiswahili (Swahili)"
    }
  ],
  "locale": "en",
  "locale_outgoing": "en",
  "date_format": "D MMM, YYYY",
  "reported_date_format": "DD-MMM-YYYY HH:mm:ss",
  "roles": {
    "data_entry": {
      "name": "usertype.data-entry"
    },
    "DSO": {
      "name": "Disease-surveillance-officer"
    },
    "facility_Dsteam": {
      "name": "Facility disease surveillance team"
    },
    "analytics": {
      "name": "usertype.analytics"
    },
    "gateway": {
      "name": "usertype.gateway"
    },
    "program_officer": {
      "name": "usertype.program-officer"
    },
    "crfo": {
      "name": "usertype.crfo"
    },
    "chp_supervisor": {
      "name": "usertype.chp-supervisor",
      "offline": true
    },
    "chp": {
      "name": "usertype.chp",
      "offline": true
    }
  },
  "permissions": {
    "can_access_gateway_api": [
      "gateway"
    ],
    "can_bulk_delete_reports": [
      "program_officer",
      "chp_supervisor",
      "chp"
    ],
    "can_configure": [
      "program_officer",
      "crfo"
    ],
    "can_create_people": [
      "program_officer",
      "chp_supervisor",
      "chp"
    ],
    "can_create_places": [
      "program_officer",
      "chp_supervisor",
      "chp"
    ],
    "can_create_records": [
      "data_entry",
      "gateway",
      "program_officer",
      "chp_supervisor",
      "chp"
    ],
    "can_create_users": [
      "program_officer"
    ],
    "can_delete_contacts": [
      "program_officer",
      "chp_supervisor",
      "chp"
    ],
    "can_delete_messages": [
      "program_officer",
      "chp_supervisor",
      "chp"
    ],
    "can_delete_reports": [
      "program_officer",
      "chp_supervisor",
      "chp"
    ],
    "can_delete_users": [
      "program_officer"
    ],
    "can_edit": [
      "gateway",
      "program_officer",
      "chp_supervisor",
      "chp"
    ],
    "can_edit_profile": [
      "program_officer",
      "chp_supervisor",
      "chp"
    ],
    "can_edit_verification": [
      "program_officer",
      "chp_supervisor",
      "chp"
    ],
    "can_export_all": [
      "program_officer",
      "crfo"
    ],
    "can_export_contacts": [
      "program_officer",
      "chp_supervisor",
      "chp"
    ],
    "can_export_feedback": [
      "program_officer"
    ],
    "can_export_messages": [
      "analytics",
      "program_officer",
      "disease_surveillance_officer",
      "chp_supervisor",
      "chp"
    ],
    "can_log_out_on_android": [],
    "can_update_places": [
      "program_officer",
      "chp_supervisor",
      "chp"
    ],
    "can_update_reports": [
      "program_officer",
      "chp_supervisor",
      "chp"
    ],
    "can_update_users": [
      "program_officer"
    ],
    "can_export_dhis": [
      "national_admin",
      "crfo"
    ],
    "can_verify_reports": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_view_analytics": [
      "analytics",
      "program_officer",
      "chp_supervisor",
      "chp"
    ],
    "can_view_analytics_tab": [
      "program_officer",
      "chp_supervisor",
      "chp"
    ],
    "can_view_call_action": [
      "program_officer",
      "chp_supervisor",
      "chp"
    ],
    "can_view_contacts": [
      "program_officer",
      "chp_supervisor",
      "chp"
    ],
    "can_view_contacts_tab": [
      "program_officer",
      "chp_supervisor",
      "chp"
    ],
    "can_view_last_visited_date": [],
    "can_view_uhc_stats": [],
    "can_view_message_action": [
      "program_officer",
      "chp_supervisor",
      "chp"
    ],
    "can_view_messages": [
      "program_officer",
      "chp_supervisor",
      "chp"
    ],
    "can_view_messages_tab": [
      "program_officer",
      "chp_supervisor",
      "chp"
    ],
    "can_view_outgoing_messages": [
      "program_officer"
    ],
    "can_view_reports": [
      "program_officer",
      "chp_supervisor",
      "chp"
    ],
    "can_view_reports_tab": [
      "program_officer",
      "chp_supervisor",
      "chp"
    ],
    "can_view_tasks": [
      "chp_supervisor",
      "chp"
    ],
    "can_view_tasks_tab": [
      "chp_supervisor",
      "chp"
    ],
    "can_view_tasks_group": [
      "chp"
    ],
    "can_view_unallocated_data_records": [
      "gateway",
      "program_officer",
      "chp_supervisor",
      "chp"
    ],
    "can_view_users": [
      "program_officer"
    ],
    "can_write_wealth_quintiles": [],
    "can_aggregate_targets": [
      "chp_supervisor"
    ],
    "can_upgrade": [
      "program_officer"
    ],
    "can_view_old_filter_and_search": [],
    "can_view_old_action_bar": []
  },
  "contact_types": [
    {
      "id": "area_health_facility",
      "icon": "area-health-facility",
      "name_key": "contact.type.area_health_facility",
      "group_key": "contact.type.area_health_facility.plural",
      "create_key": "contact.type.area_health_facility.new",
      "edit_key": "contact.type.area_health_facility.edit",
      "create_form": "form:contact:area_health_facility:create",
      "edit_form": "form:contact:area_health_facility:edit"
    },
    {
      "id": "area_health_facility_nurse",
      "icon": "area-health-facility-nurse",
      "name_key": "contact.type.area_health_facility_nurse",
      "group_key": "contact.type.area_health_facility_nurse.plural",
      "create_key": "contact.type.area_health_facility_nurse.new",
      "edit_key": "contact.type.area_health_facility_nurse.edit",
      "parents": [
        "area_health_facility"
      ],
      "create_form": "form:contact:area_health_facility_nurse:create",
      "edit_form": "form:contact:area_health_facility_nurse:edit",
      "person": true
    },
    {
      "id": "area_supervisor_region",
      "icon": "area-supervisor-region",
      "name_key": "contact.type.area_supervisor_region",
      "group_key": "contact.type.area_supervisor_region.plural",
      "create_key": "contact.type.area_supervisor_region.new",
      "edit_key": "contact.type.area_supervisor_region.edit",
      "parents": [
        "area_health_facility"
      ],
      "create_form": "form:contact:area_supervisor_region:create",
      "edit_form": "form:contact:area_supervisor_region:edit"
    },
    {
      "id": "area_community_health_supervisor",
      "icon": "area-community-health-supervisor",
      "name_key": "contact.type.area_community_health_supervisor",
      "group_key": "contact.type.area_community_health_supervisor.plural",
      "create_key": "contact.type.area_community_health_supervisor.new",
      "edit_key": "contact.type.area_community_health_supervisor.edit",
      "parents": [
        "area_supervisor_region"
      ],
      "create_form": "form:contact:area_community_health_supervisor:create",
      "edit_form": "form:contact:area_community_health_supervisor:edit",
      "person": true
    },
    {
      "id": "community_health_area",
      "icon": "community-health-area",
      "name_key": "contact.type.community_health_area",
      "group_key": "contact.type.community_health_area.plural",
      "create_key": "contact.type.community_health_area.new",
      "edit_key": "contact.type.community_health_area.edit",
      "create_form": "form:contact:community_health_area:create",
      "parents": [
        "area_supervisor_region"
      ],
      "edit_form": "form:contact:community_health_area:edit"
    },
    {
      "id": "community_health_volunteer",
      "icon": "community-health-volunteer",
      "name_key": "contact.type.community_health_volunteer",
      "group_key": "contact.type.community_health_volunteer.plural",
      "create_key": "contact.type.community_health_volunteer.new",
      "edit_key": "contact.type.community_health_volunteer.edit",
      "parents": [
        "community_health_area"
      ],
      "create_form": "form:contact:community_health_volunteer:create",
      "edit_form": "form:contact:community_health_volunteer:edit",
      "person": true
    },
    {
      "id": "household",
      "icon": "icon-people-family",
      "name_key": "contact.type.household",
      "group_key": "contact.type.household.plural",
      "create_key": "contact.type.household.new",
      "edit_key": "contact.type.household.edit",
      "parents": [
        "community_health_area"
      ],
      "create_form": "form:contact:household:create",
      "edit_form": "form:contact:household:edit"
    },
    {
      "id": "household_member",
      "icon": "household-member",
      "name_key": "contact.type.household_member",
      "group_key": "contact.type.household_member.plural",
      "create_key": "contact.type.household_member.new",
      "edit_key": "contact.type.household_member.edit",
      "parents": [
        "household"
      ],
      "create_form": "form:contact:household_member:create",
      "edit_form": "form:contact:household_member:edit",
      "person": true
    }
  ],
  "forms": {},
  "schedules": [],
  "contact_summary": "var ContactSummary = {}; !function(e,t){if('object'==typeof exports&&'object'==typeof module)module.exports=t();else if('function'==typeof define&&define.amd)define([],t);else{var n=t();for(var r in n)('object'==typeof exports?exports:e)[r]=n[r]}}(ContactSummary,(function(){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){'undefined'!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:'Module'}),Object.defineProperty(e,'__esModule',{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&'object'==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,'default',{enumerable:!0,value:e}),2&t&&'string'!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,'a',t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p='',n(n.s=0)}([function(e,t,n){var r=n(1),o=n(2);e.exports=o(r,contact,reports)},function(e,t){e.exports={fields:[],cards:[],context:{}}},function(e,t){function n(e){return e?Array.isArray(e)?e:[e]:[]}function r(e,t){switch(typeof e){case'undefined':return!0;case'function':return e(t);default:return e}}function o(e,t,n){if(r(e.appliesIf,n)){var o='function'==typeof e.fields?e.fields(n):e.fields.filter((function(e){return r(e.appliesIf,n)})).map((function(e){var t={};return i(e,t,'label'),i(e,t,'value'),i(e,t,'translate'),i(e,t,'filter'),i(e,t,'width'),i(e,t,'icon'),e.context&&(t.context={},i(e.context,t.context,'count'),i(e.context,t.context,'total')),t}));return e.modifyContext&&e.modifyContext(t,n),{label:e.label,fields:o}}function i(e,t,r){switch(typeof e[r]){case'undefined':return;case'function':t[r]=e[r](n);break;default:t[r]=e[r]}}}e.exports=function(e,t,r){var i=e.fields||[],f=e.context||{},u=e.cards||[],c=t&&('contact'===t.type?t.contact_type:t.type),l={cards:[],fields:i.filter((function(e){var t=n(e.appliesToType),r=t.filter((function(e){return e&&'!'===e.charAt(0)}));if((0===t.length||t.includes(c)||r.length>0&&!r.includes('!'+c))&&(!e.appliesIf||e.appliesIf()))return delete e.appliesToType,delete e.appliesIf,!0}))};return u.forEach((function(e){var t,i,u,a,p=n(e.appliesToType);if(p.includes('report')&&p.length>1)throw new Error('You cannot set appliesToType to an array which includes the type \\'report\\' and another type.');if(p.includes('report'))for(t=0;t<r.length;++t)i=r[t],!(a=i)||a.errors&&a.errors.length||(u=o(e,f,i))&&l.cards.push(u);else{if(!p.includes(c)&&p.length>0)return;(u=o(e,f))&&l.cards.push(u)}})),l.context=f,l}}])})); return ContactSummary;",
  "tasks": {
    "rules": "define Target { _id: null, contact: null, deleted: null, type: null, pass: null, date: null, groupBy: null }\ndefine Contact { contact: null, reports: null, tasks: null }\ndefine Task { _id: null, deleted: null, doc: null, contact: null, icon: null, date: null, readyStart: null, readyEnd: null, title: null, fields: null, resolved: null, priority: null, priorityLabel: null, reports: null, actions: null }\nrule GenerateEvents {\n  when { c: Contact } then { !function(e){var t={};function o(r){if(t[r])return t[r].exports;var n=t[r]={i:r,l:!1,exports:{}};return e[r].call(n.exports,n,n.exports,o),n.l=!0,n.exports}o.m=e,o.c=t,o.d=function(e,t,r){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},o.r=function(e){'undefined'!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:'Module'}),Object.defineProperty(e,'__esModule',{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&'object'==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(o.r(r),Object.defineProperty(r,'default',{enumerable:!0,value:e}),2&t&&'string'!=typeof e)for(var n in e)o.d(r,n,function(t){return e[t]}.bind(null,n));return r},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,'a',t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p='',o(o.s=2)}([function(e,t){e.exports={getField:function(e,t){return['fields',...(t||'').split('.')].reduce((e,t)=>{if(void 0!==e)return e[t]},e)}}},function(e,t){e.exports=function(e){var t={};!function e(t,o){var r=Object.keys(t);for(var n in r){var a=r[n];switch(typeof t[a]){case'object':e(t[a],o);break;case'function':t[a]=t[a].bind(o)}}}(e,t),t.definition=function e(t){var o=Object.assign({},t),r=Object.keys(o);for(var n in r){var a=r[n];if(Array.isArray(o[a])){o[a]=o[a].slice(0);for(var s=0;s<o[a].length;++s)'object'==typeof o[a][s]&&(o[a][s]=e(o[a][s]))}else'object'==typeof o[a]&&(o[a]=e(o[a]))}return o}(e)}},function(e,t,o){var r=o(3),n=o(4),a=o(5);o(7)(n,c,Utils,Target,emit),a(r,c,Utils,Task,emit),emit('_complete',{_id:!0})},function(e,t,o){const r=o(0),{getField:n}=r;e.exports=[{name:'follow-up-household-member',title:'Follow up household member',icon:'icon-healthcare-assessment',appliesTo:'reports',appliesToType:['household_member_assessment'],appliesIf:function(e,t){return'yes'===n(t,'household_member_assessment.initial_symptoms')},actions:[{form:'cholera_follow_up'}],events:[{start:3,end:3,dueDate:function(e,t,o){return new Date(o.reported_date+24*e.start*60*60*1e3)}}]}]},function(e,t,o){const r=o(0),{getField:n}=r;e.exports=[{id:'register_households_target',translation_key:'target.register_households',subtitle_translation_key:'target.register_households.subtitle',icon:'icon-register-household',type:'count',goal:50,appliesTo:'contacts',appliesToType:['household'],appliesIf:function(e){return'household'===e.contact.contact_type},date:'now',aggregate:!0},{id:'follow_up_household_member_target',translation_key:'target.follow_up_household_member',subtitle_translation_key:'target.follow_up_household_member.subtitle',icon:'icon-healthcare-assessment',type:'percent',goal:100,appliesTo:'contacts',appliesToType:['household_member','household'],appliesIf:function(e){return console.log('contactFollowUpApplies',e),'household_member'===e.contact.contact_type||'household'===e.contact.contact_type},passesIf:function(e){console.log('contactFollowUpPasses',e);let t=e.reports;for(const e of t)if('household_member_assessment'===e.form)return!0;return!1},date:'reported',aggregate:!0},{id:'referrals_given_target',translation_key:'target.referrals_given',subtitle_translation_key:'target.referrals_given.subtitle',icon:'icon-referral',type:'count',goal:20,appliesTo:'reports',appliesToType:['household_member_assessment'],appliesIf:function(e,t){return'yes'===n(t,'household_member_assessment.initial_symptoms')},date:'reported',aggregate:!0},{id:'referrals_honored_target',translation_key:'target.referrals_honored',subtitle_translation_key:'target.referrals_honored.subtitle',icon:'icon-referral',type:'percent',goal:80,appliesTo:'reports',appliesToType:['household_member_assessment','cholera_follow_up'],appliesIf:function(e,t){let o=n(t,'household_member_assessment.initial_symptoms');return n(t,'danger_signs.visit_confirm'),'yes'===o},passesIf:function(e){let t=e.reports;for(const e of t)if('cholera_follow_up'===e.form){return'yes'===e.fields.danger_signs.visit_confirm}return!1},date:'reported',aggregate:!0}]},function(e,t,o){var r=o(1),n=o(6);function a(e,t,o,r,n,a){var s;if(e.appliesToType){var i;if('contacts'===e.appliesTo){if(!n.contact)return;i='contact'===n.contact.type?n.contact.contact_type:n.contact.type}else{if(!a)return;i=a.form}if(-1===e.appliesToType.indexOf(i))return}if('scheduled_tasks'===e.appliesTo||!e.appliesIf||e.appliesIf(n,a))if('scheduled_tasks'===e.appliesTo){if(a&&e.appliesIf){if(!a.scheduled_tasks)return;for(s=0;s<a.scheduled_tasks.length;s++)e.appliesIf(n,a,s)&&l(s)}}else l();function c(e,t,o){var r;return(r='function'==typeof e.contactLabel?e.contactLabel(t,o):e.contactLabel)?{name:r}:t.contact}function l(s){var i,l,d,u,f=null;for(i=0;i<e.events.length;i++){if((l=e.events[i]).dueDate)f=l.dueDate(l,n,a,s);else if(a)f=void 0!==s?new Date(t.addDate(new Date(a.scheduled_tasks[s].due),l.days)):new Date(t.addDate(new Date(a.reported_date),l.days));else if(l.dueDate)f=l.dueDate(l,n);else{var _=n.contact&&n.contact.reported_date?new Date(n.contact.reported_date):new Date;f=new Date(t.addDate(_,l.days))}t.isTimely(f,l)&&(u={_id:(a?a._id:n.contact&&n.contact._id)+'~'+(l.id||i)+'~'+e.name,deleted:!(!(n.contact&&n.contact.deleted||a)||!a.deleted),doc:n,contact:c(e,n,a),icon:e.icon,date:f,readyStart:l.start||0,readyEnd:l.end||0,title:e.title,resolved:e.resolvedIf(n,a,l,f,s),actions:p(e.actions,l)},void 0!==s&&(u._id+='-'+s),'function'==typeof(d=e.priority)&&(d=d(n,a)),d&&(u.priority=d.level,u.priorityLabel=d.label),r('task',new o(u)))}}function p(t,o){return e.actions.map((function(e){return function(e,t){var o={source:'task',source_id:a?a._id:n.contact&&n.contact._id,contact:n.contact};e.modifyContent&&e.modifyContent(o,n,a,t);return{type:e.type||'report',form:e.form,label:e.label||'Follow up',content:o}}(e,o)}))}}e.exports=function(e,t,o,s,i){if(e)for(var c,l,p=0;p<e.length;++p)switch('function'!=typeof(c=Object.assign({},e[p],n)).resolvedIf&&(c.resolvedIf=function(e,t,r,n){return c.defaultResolvedIf(e,t,r,n,o)}),r(c),c.appliesTo){case'reports':case'scheduled_tasks':for(var d=0;d<t.reports.length;++d)l=t.reports[d],a(c,o,s,i,t,l);break;case'contacts':t.contact&&a(c,o,s,i,t);break;default:throw new Error('Unrecognised task.appliesTo: '+c.appliesTo)}}},function(e,t){e.exports={defaultResolvedIf:function(e,t,o,r,n){var a,s;n||(n=Utils);var i=function(e){var t;if(!e||!e.actions)return;return(t=e.actions.find((function(e){return!e.type||'report'===e.type})))&&t.form}(this.definition);if(!i)throw new Error('Could not find the default resolving form!');return a=0,a=t?Math.max(n.addDate(r,-o.start).getTime(),t.reported_date+1):n.addDate(r,-o.start).getTime(),s=n.addDate(r,o.end+1).getTime(),n.isFormSubmittedInWindow(e.reports,i,a,s)}}},function(e,t,o){var r=o(1);function n(e,t,o,r,n,a){var s=!!a;if(n.contact){var i='contact'===n.contact.type?n.contact.contact_type:n.contact.type,c=s?a.form:i;if(!(e.appliesToType&&e.appliesToType.indexOf(c)<0)&&(!e.appliesIf||e.appliesIf(n,a)))for(var l=s?a:n.contact,p=function(e,t,o){var r;return r='function'==typeof e.idType?e.idType(t,o):'report'===e.idType?o&&o._id:t.contact&&t.contact._id,Array.isArray(r)||(r=[r]),r}(e,n,a),d=!e.passesIf||!!e.passesIf(n,a),u=function(e,t,o,r){if('function'==typeof e.date)return e.date(o,r)||t.now().getTime();if(void 0===e.date||null===e.date||'now'===e.date)return t.now().getTime();if('reported'===e.date)return r?r.reported_date:o.contact.reported_date;throw new Error('Unrecognised value for target.date: '+e.date)}(e,o,n,a),f=e.groupBy&&e.groupBy(n,a),_=0;_<p.length;++_){var y=new t({_id:p[_]+'~'+e.id,contact:n.contact,deleted:!!l.deleted,type:e.id,pass:d,groupBy:f,date:u});e.emitCustom?e.emitCustom(m,y,n,a):m(y)}}function m(e){r('target',e)}}e.exports=function(e,t,o,a,s){for(var i=0;i<e.length;++i){var c=e[i];switch(r(c),c.appliesTo){case'contacts':n(c,a,o,s,t);break;case'reports':for(var l=0;l<t.reports.length;++l){n(c,a,o,s,t,t.reports[l])}break;default:throw new Error('Unrecognised target.appliesTo: '+c.appliesTo)}}}}]); }\n}",
    "targets": {
      "enabled": true,
      "items": [
        {
          "id": "register_households_target",
          "type": "count",
          "goal": 50,
          "translation_key": "target.register_households",
          "icon": "icon-register-household",
          "subtitle_translation_key": "target.register_households.subtitle",
          "aggregate": true
        },
        {
          "id": "follow_up_household_member_target",
          "type": "percent",
          "goal": 100,
          "translation_key": "target.follow_up_household_member",
          "icon": "icon-healthcare-assessment",
          "subtitle_translation_key": "target.follow_up_household_member.subtitle",
          "aggregate": true
        },
        {
          "id": "referrals_given_target",
          "type": "count",
          "goal": 20,
          "translation_key": "target.referrals_given",
          "icon": "icon-referral",
          "subtitle_translation_key": "target.referrals_given.subtitle",
          "aggregate": true
        },
        {
          "id": "referrals_honored_target",
          "type": "percent",
          "goal": 80,
          "translation_key": "target.referrals_honored",
          "icon": "icon-referral",
          "subtitle_translation_key": "target.referrals_honored.subtitle",
          "aggregate": true
        }
      ]
    }
  }
}
